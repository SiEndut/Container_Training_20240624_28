apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "6"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"mysql:8.0-el8","namespace":"openshift"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mysql\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2024-06-27T02:32:44Z"
    generation: 7
    labels:
      app: mydb
      app.kubernetes.io/component: mydb
      app.kubernetes.io/instance: mydb
    name: mydb
    namespace: danny-dbproj
    resourceVersion: "1022011"
    uid: bb69aadf-557b-457e-b97f-6dcd697e6786
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: mydb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: mydb
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: MYSQL_DATABASE
                name: dbsecret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: dbsecret
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_USER
                name: dbsecret
          image: image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:8e9a6595ac9aec17c62933d3b5ecc78df8174a6c2ff74c7f602235b9aef0a340
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 5Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-06-28T06:38:38Z"
      lastUpdateTime: "2024-06-28T06:38:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-06-27T02:32:44Z"
      lastUpdateTime: "2024-06-28T06:38:38Z"
      message: ReplicaSet "mydb-647765c4c9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2024-06-27T02:32:44Z"
    labels:
      app: mydb
      app.kubernetes.io/component: mydb
      app.kubernetes.io/instance: mydb
    name: mydb
    namespace: danny-dbproj
    resourceVersion: "511297"
    uid: d0890f43-bdf6-4254-99ed-c937da3852e5
  spec:
    clusterIP: 172.30.174.239
    clusterIPs:
    - 172.30.174.239
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      deployment: mydb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
